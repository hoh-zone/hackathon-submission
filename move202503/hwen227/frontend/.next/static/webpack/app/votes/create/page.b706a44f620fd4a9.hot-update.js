"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/votes/create/page",{

/***/ "(app-pages-browser)/./contracts/seal.ts":
/*!***************************!*\
  !*** ./contracts/seal.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   constructMoveCall: () => (/* binding */ constructMoveCall),\n/* harmony export */   decryptVotePool: () => (/* binding */ decryptVotePool),\n/* harmony export */   encryptUserVote: () => (/* binding */ encryptUserVote),\n/* harmony export */   encryptVotePool: () => (/* binding */ encryptVotePool),\n/* harmony export */   test_decrptedVoteBox: () => (/* binding */ test_decrptedVoteBox)\n/* harmony export */ });\n/* harmony import */ var _mysten_sui_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mysten/sui/utils */ \"(app-pages-browser)/./node_modules/@mysten/bcs/dist/esm/hex.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"(app-pages-browser)/./contracts/index.ts\");\n/* harmony import */ var _mysten_sui_transactions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @mysten/sui/transactions */ \"(app-pages-browser)/./node_modules/@mysten/sui/dist/esm/transactions/Transaction.js\");\n/* harmony import */ var _mysten_seal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @mysten/seal */ \"(app-pages-browser)/./node_modules/@mysten/seal/dist/esm/bcs.js\");\n/* harmony import */ var _mysten_seal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mysten/seal */ \"(app-pages-browser)/./node_modules/@mysten/seal/dist/esm/error.js\");\n\n\n\n\n\nconst constructMoveCall = (packageId, allowlistId)=>{\n    return (tx, id)=>{\n        tx.moveCall({\n            target: \"\".concat(packageId, \"::allowlist::seal_approve\"),\n            arguments: [\n                tx.pure.vector('u8', (0,_mysten_sui_utils__WEBPACK_IMPORTED_MODULE_1__.fromHex)(id)),\n                tx.object(allowlistId),\n                tx.pure.string(\"\")\n            ]\n        });\n    };\n};\nconst encryptVotePool = async (votePool, allowlistID)=>{\n    const nonce = crypto.getRandomValues(new Uint8Array(5));\n    const policyObjectBytes = (0,_mysten_sui_utils__WEBPACK_IMPORTED_MODULE_1__.fromHex)(allowlistID);\n    const id = (0,_mysten_sui_utils__WEBPACK_IMPORTED_MODULE_1__.toHex)(new Uint8Array([\n        ...policyObjectBytes,\n        ...nonce\n    ]));\n    const encoder = new TextEncoder();\n    const serializedData = encoder.encode(JSON.stringify(votePool));\n    const { encryptedObject: encryptedBytes } = await ___WEBPACK_IMPORTED_MODULE_0__.sealClient.encrypt({\n        threshold: 2,\n        id,\n        packageId: ___WEBPACK_IMPORTED_MODULE_0__.networkConfig.testnet.variables.packageID,\n        data: serializedData\n    });\n    return encryptedBytes;\n};\nconst encryptUserVote = async (option, voteboxID)=>{\n    const nonce = crypto.getRandomValues(new Uint8Array(5));\n    const policyObjectBytes = (0,_mysten_sui_utils__WEBPACK_IMPORTED_MODULE_1__.fromHex)(voteboxID);\n    const id = (0,_mysten_sui_utils__WEBPACK_IMPORTED_MODULE_1__.toHex)(new Uint8Array([\n        ...policyObjectBytes,\n        ...nonce\n    ]));\n    const encoder = new TextEncoder();\n    const { encryptedObject: encryptedBytes } = await ___WEBPACK_IMPORTED_MODULE_0__.sealClient.encrypt({\n        threshold: 2,\n        id,\n        packageId: ___WEBPACK_IMPORTED_MODULE_0__.networkConfig.testnet.variables.packageID,\n        data: encoder.encode(option)\n    });\n    return encryptedBytes;\n};\nconst decryptVotePool = async (sessionKey, encryptedData, moveCallConstructor)=>{\n    const fullId = _mysten_seal__WEBPACK_IMPORTED_MODULE_2__.EncryptedObject.parse(new Uint8Array(encryptedData)).id;\n    const tx = new _mysten_sui_transactions__WEBPACK_IMPORTED_MODULE_3__.Transaction();\n    moveCallConstructor(tx, fullId);\n    const txBytes = await tx.build({\n        client: ___WEBPACK_IMPORTED_MODULE_0__.suiClient,\n        onlyTransactionKind: true\n    });\n    try {\n        const decryptedData = await ___WEBPACK_IMPORTED_MODULE_0__.sealClient.decrypt({\n            data: new Uint8Array(encryptedData),\n            sessionKey,\n            txBytes\n        });\n        console.log(\"权限通过\");\n        return decodeVotePool(decryptedData);\n    } catch (err) {\n        console.log(err);\n        const errorMsg = err instanceof _mysten_seal__WEBPACK_IMPORTED_MODULE_4__.NoAccessError ? 'No access to decryption keys' : 'Unable to decrypt files, try again';\n        console.error(errorMsg, err);\n        return;\n    }\n};\nconst decodeVotePool = (data)=>{\n    try {\n        // 将Uint8Array转换为文本\n        const decoder = new TextDecoder();\n        const jsonString = decoder.decode(data);\n        // 解析JSON字符串成对象\n        const votePoolData = JSON.parse(jsonString);\n        return votePoolData;\n    } catch (error) {\n        console.error(\"解码VotePool失败:\", error);\n        throw new Error(\"无法解码VotePool数据\");\n    }\n};\n// const decrptedVoteBox = async (voteBoxData: SuiEncryptedVoteType[]) => {\n//     const validVotes = voteBoxData.filter((vote) => {\n//         vote.voter is Uint16Array\n//     }\n// }\nconst test_decrptedVoteBox = async (sessionKey, voteBoxData, moveCallConstructor)=>{\n    console.log(\"开始解密投票数据，数量:\", voteBoxData.length);\n    console.log(\"使用的sessionKey地址:\", sessionKey.getAddress());\n    // 顺序处理而不是并行处理，以避免可能的竞争条件\n    const voteResult = [];\n    for (const vote of voteBoxData){\n        try {\n            // 为每个投票创建新的事务对象\n            const tx = new _mysten_sui_transactions__WEBPACK_IMPORTED_MODULE_3__.Transaction();\n            tx.setSender(sessionKey.getAddress());\n            // 解析加密对象ID\n            const fullId = _mysten_seal__WEBPACK_IMPORTED_MODULE_2__.EncryptedObject.parse(new Uint8Array(vote.vote)).id;\n            console.log(\"正在处理加密投票ID:\", fullId);\n            moveCallConstructor(tx, fullId);\n            const txBytes = await tx.build({\n                client: ___WEBPACK_IMPORTED_MODULE_0__.suiClient,\n                onlyTransactionKind: true\n            });\n            console.log(\"交易构建完成，开始解密...\");\n            // 解密投票\n            const decryptedVote = await ___WEBPACK_IMPORTED_MODULE_0__.sealClient.decrypt({\n                data: new Uint8Array(vote.vote),\n                sessionKey,\n                txBytes\n            });\n            const decoder = new TextDecoder();\n            const voteNumber = decoder.decode(decryptedVote);\n            console.log(\"解密成功，投票索引:\", voteNumber);\n            voteResult.push(voteNumber);\n        } catch (err) {\n            console.error(\"解密单个投票时出错:\", err);\n            // 详细记录错误类型\n            if (err instanceof _mysten_seal__WEBPACK_IMPORTED_MODULE_4__.NoAccessError) {\n                console.error('无权访问解密密钥:', err);\n            } else {\n                console.error('解密失败，详细错误:', err);\n                // 如果可能，记录sessionKey的状态\n                try {\n                    var _sessionKey_getPersonalMessage, _sessionKey_isExpired;\n                    console.log(\"当前sessionKey状态:\", {\n                        address: sessionKey.getAddress(),\n                        hasSignature: Boolean((_sessionKey_getPersonalMessage = sessionKey.getPersonalMessage) === null || _sessionKey_getPersonalMessage === void 0 ? void 0 : _sessionKey_getPersonalMessage.call(sessionKey)),\n                        expired: ((_sessionKey_isExpired = sessionKey.isExpired) === null || _sessionKey_isExpired === void 0 ? void 0 : _sessionKey_isExpired.call(sessionKey)) || \"未知\"\n                    });\n                } catch (e) {\n                    console.log(\"无法检查sessionKey状态\", e);\n                }\n            }\n        }\n    }\n    console.log(\"解密完成: 成功 \".concat(voteResult.length, \"/\").concat(voteBoxData.length));\n    return voteResult;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QztZQUNwQixNQUFNYSxhQUFhZCxRQUFRRyxNQUFNLENBQUNVO1lBQ2xDbkIsUUFBUUMsR0FBRyxDQUFDLGNBQWNtQjtZQUUxQkosV0FBV0ssSUFBSSxDQUFDRDtRQUNwQixFQUFFLE9BQU9qQixLQUFLO1lBQ1ZILFFBQVFLLEtBQUssQ0FBQyxjQUFjRjtZQUU1QixXQUFXO1lBQ1gsSUFBSUEsZUFBZXJELHVEQUFhQSxFQUFFO2dCQUM5QmtELFFBQVFLLEtBQUssQ0FBQyxhQUFhRjtZQUMvQixPQUFPO2dCQUNISCxRQUFRSyxLQUFLLENBQUMsY0FBY0Y7Z0JBRTVCLHVCQUF1QjtnQkFDdkIsSUFBSTt3QkFHMEJkLGdDQUNiQTtvQkFIYlcsUUFBUUMsR0FBRyxDQUFDLG1CQUFtQjt3QkFDM0JxQixTQUFTakMsV0FBVzBCLFVBQVU7d0JBQzlCUSxjQUFjQyxTQUFRbkMsaUNBQUFBLFdBQVdvQyxrQkFBa0IsY0FBN0JwQyxxREFBQUEsb0NBQUFBO3dCQUN0QnFDLFNBQVNyQyxFQUFBQSx3QkFBQUEsV0FBV3NDLFNBQVMsY0FBcEJ0Qyw0Q0FBQUEsMkJBQUFBLGdCQUE0QjtvQkFDekM7Z0JBQ0osRUFBRSxPQUFPdUMsR0FBRztvQkFDUjVCLFFBQVFDLEdBQUcsQ0FBQyxvQkFBb0IyQjtnQkFDcEM7WUFDSjtRQUNKO0lBQ0o7SUFDQTVCLFFBQVFDLEdBQUcsQ0FBQyxZQUFpQ1ksT0FBckJHLFdBQVdGLE1BQU0sRUFBQyxLQUFzQixPQUFuQkQsWUFBWUMsTUFBTTtJQUMvRCxPQUFPRTtBQUNYLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29udHJhY3RzL3NlYWwudHM/YTk5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdWlFbmNyeXB0ZWRWb3RlVHlwZSwgRW5jcnlwdGVkSW5wdXRWb3RlUG9vbCB9IGZyb20gXCJAL3R5cGVzXCI7XG5cbmltcG9ydCB7IHRvSGV4IH0gZnJvbSBcIkBteXN0ZW4vc3VpL3V0aWxzXCI7XG5pbXBvcnQgeyBmcm9tSGV4IH0gZnJvbSBcIkBteXN0ZW4vc3VpL3V0aWxzXCI7XG5pbXBvcnQgeyBuZXR3b3JrQ29uZmlnLCBzZWFsQ2xpZW50LCBzdWlDbGllbnQgfSBmcm9tIFwiLlwiO1xuaW1wb3J0IHsgVHJhbnNhY3Rpb24gfSBmcm9tIFwiQG15c3Rlbi9zdWkvdHJhbnNhY3Rpb25zXCI7XG5pbXBvcnQgeyBFbmNyeXB0ZWRPYmplY3QsIE5vQWNjZXNzRXJyb3IsIFNlc3Npb25LZXkgfSBmcm9tIFwiQG15c3Rlbi9zZWFsXCI7XG5cblxuZXhwb3J0IHR5cGUgTW92ZUNhbGxDb25zdHJ1Y3RvciA9ICh0eDogVHJhbnNhY3Rpb24sIGlkOiBzdHJpbmcpID0+IHZvaWQ7XG5cbmV4cG9ydCBjb25zdCBjb25zdHJ1Y3RNb3ZlQ2FsbCA9IChwYWNrYWdlSWQ6IHN0cmluZywgYWxsb3dsaXN0SWQ6IHN0cmluZyk6IE1vdmVDYWxsQ29uc3RydWN0b3IgPT4ge1xuICAgIHJldHVybiAodHg6IFRyYW5zYWN0aW9uLCBpZDogc3RyaW5nKSA9PiB7XG4gICAgICAgIHR4Lm1vdmVDYWxsKHtcbiAgICAgICAgICAgIHRhcmdldDogYCR7cGFja2FnZUlkfTo6YWxsb3dsaXN0OjpzZWFsX2FwcHJvdmVgLFxuICAgICAgICAgICAgYXJndW1lbnRzOiBbdHgucHVyZS52ZWN0b3IoJ3U4JywgZnJvbUhleChpZCkpLCB0eC5vYmplY3QoYWxsb3dsaXN0SWQpLCB0eC5wdXJlLnN0cmluZyhcIlwiKV0sXG4gICAgICAgIH0pO1xuICAgIH07XG59XG5cbmV4cG9ydCBjb25zdCBlbmNyeXB0Vm90ZVBvb2wgPSBhc3luYyAodm90ZVBvb2w6IEVuY3J5cHRlZElucHV0Vm90ZVBvb2wsIGFsbG93bGlzdElEOiBzdHJpbmcpOiBQcm9taXNlPFVpbnQ4QXJyYXk+ID0+IHtcbiAgICBjb25zdCBub25jZSA9IGNyeXB0by5nZXRSYW5kb21WYWx1ZXMobmV3IFVpbnQ4QXJyYXkoNSkpO1xuICAgIGNvbnN0IHBvbGljeU9iamVjdEJ5dGVzID0gZnJvbUhleChhbGxvd2xpc3RJRCk7XG4gICAgY29uc3QgaWQgPSB0b0hleChuZXcgVWludDhBcnJheShbLi4ucG9saWN5T2JqZWN0Qnl0ZXMsIC4uLm5vbmNlXSkpO1xuXG4gICAgY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuICAgIGNvbnN0IHNlcmlhbGl6ZWREYXRhID0gZW5jb2Rlci5lbmNvZGUoSlNPTi5zdHJpbmdpZnkodm90ZVBvb2wpKTtcblxuICAgIGNvbnN0IHsgZW5jcnlwdGVkT2JqZWN0OiBlbmNyeXB0ZWRCeXRlcyB9ID0gYXdhaXQgc2VhbENsaWVudC5lbmNyeXB0KHtcbiAgICAgICAgdGhyZXNob2xkOiAyLFxuICAgICAgICBpZCxcbiAgICAgICAgcGFja2FnZUlkOiBuZXR3b3JrQ29uZmlnLnRlc3RuZXQudmFyaWFibGVzLnBhY2thZ2VJRCxcbiAgICAgICAgZGF0YTogc2VyaWFsaXplZERhdGEsXG4gICAgfSk7XG5cbiAgICByZXR1cm4gZW5jcnlwdGVkQnl0ZXM7XG59XG5cbmV4cG9ydCBjb25zdCBlbmNyeXB0VXNlclZvdGUgPSBhc3luYyAob3B0aW9uOiBzdHJpbmcsIHZvdGVib3hJRDogc3RyaW5nKTogUHJvbWlzZTxVaW50OEFycmF5PiA9PiB7XG4gICAgY29uc3Qgbm9uY2UgPSBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKG5ldyBVaW50OEFycmF5KDUpKTtcbiAgICBjb25zdCBwb2xpY3lPYmplY3RCeXRlcyA9IGZyb21IZXgodm90ZWJveElEKTtcbiAgICBjb25zdCBpZCA9IHRvSGV4KG5ldyBVaW50OEFycmF5KFsuLi5wb2xpY3lPYmplY3RCeXRlcywgLi4ubm9uY2VdKSk7XG5cbiAgICBjb25zdCBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG5cblxuICAgIGNvbnN0IHsgZW5jcnlwdGVkT2JqZWN0OiBlbmNyeXB0ZWRCeXRlcyB9ID0gYXdhaXQgc2VhbENsaWVudC5lbmNyeXB0KHtcbiAgICAgICAgdGhyZXNob2xkOiAyLFxuICAgICAgICBpZCxcbiAgICAgICAgcGFja2FnZUlkOiBuZXR3b3JrQ29uZmlnLnRlc3RuZXQudmFyaWFibGVzLnBhY2thZ2VJRCxcbiAgICAgICAgZGF0YTogZW5jb2Rlci5lbmNvZGUob3B0aW9uKSxcbiAgICB9KTtcblxuICAgIHJldHVybiBlbmNyeXB0ZWRCeXRlcztcbn1cblxuZXhwb3J0IGNvbnN0IGRlY3J5cHRWb3RlUG9vbCA9IGFzeW5jIChzZXNzaW9uS2V5OiBTZXNzaW9uS2V5LCBlbmNyeXB0ZWREYXRhOiBVaW50MTZBcnJheSwgbW92ZUNhbGxDb25zdHJ1Y3RvcjogTW92ZUNhbGxDb25zdHJ1Y3RvcikgPT4ge1xuXG4gICAgY29uc3QgZnVsbElkID0gRW5jcnlwdGVkT2JqZWN0LnBhcnNlKG5ldyBVaW50OEFycmF5KGVuY3J5cHRlZERhdGEpKS5pZDtcblxuICAgIGNvbnN0IHR4ID0gbmV3IFRyYW5zYWN0aW9uKCk7XG4gICAgbW92ZUNhbGxDb25zdHJ1Y3Rvcih0eCwgZnVsbElkKTtcblxuICAgIGNvbnN0IHR4Qnl0ZXMgPSBhd2FpdCB0eC5idWlsZCh7IGNsaWVudDogc3VpQ2xpZW50LCBvbmx5VHJhbnNhY3Rpb25LaW5kOiB0cnVlIH0pO1xuXG4gICAgdHJ5IHtcblxuICAgICAgICBjb25zdCBkZWNyeXB0ZWREYXRhID0gYXdhaXQgc2VhbENsaWVudC5kZWNyeXB0KHtcbiAgICAgICAgICAgIGRhdGE6IG5ldyBVaW50OEFycmF5KGVuY3J5cHRlZERhdGEpLFxuICAgICAgICAgICAgc2Vzc2lvbktleSxcbiAgICAgICAgICAgIHR4Qnl0ZXMsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnNvbGUubG9nKFwi5p2D6ZmQ6YCa6L+HXCIpO1xuICAgICAgICByZXR1cm4gZGVjb2RlVm90ZVBvb2woZGVjcnlwdGVkRGF0YSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgIGNvbnN0IGVycm9yTXNnID1cbiAgICAgICAgICAgIGVyciBpbnN0YW5jZW9mIE5vQWNjZXNzRXJyb3JcbiAgICAgICAgICAgICAgICA/ICdObyBhY2Nlc3MgdG8gZGVjcnlwdGlvbiBrZXlzJ1xuICAgICAgICAgICAgICAgIDogJ1VuYWJsZSB0byBkZWNyeXB0IGZpbGVzLCB0cnkgYWdhaW4nO1xuICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yTXNnLCBlcnIpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxufVxuXG5cbmNvbnN0IGRlY29kZVZvdGVQb29sID0gKGRhdGE6IFVpbnQ4QXJyYXkpOiBFbmNyeXB0ZWRJbnB1dFZvdGVQb29sID0+IHtcbiAgICB0cnkge1xuICAgICAgICAvLyDlsIZVaW50OEFycmF56L2s5o2i5Li65paH5pysXG4gICAgICAgIGNvbnN0IGRlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKTtcbiAgICAgICAgY29uc3QganNvblN0cmluZyA9IGRlY29kZXIuZGVjb2RlKGRhdGEpO1xuXG4gICAgICAgIC8vIOino+aekEpTT07lrZfnrKbkuLLmiJDlr7nosaFcbiAgICAgICAgY29uc3Qgdm90ZVBvb2xEYXRhID0gSlNPTi5wYXJzZShqc29uU3RyaW5nKTtcblxuICAgICAgICByZXR1cm4gdm90ZVBvb2xEYXRhIGFzIEVuY3J5cHRlZElucHV0Vm90ZVBvb2w7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIuino+eggVZvdGVQb29s5aSx6LSlOlwiLCBlcnJvcik7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIuaXoOazleino+eggVZvdGVQb29s5pWw5o2uXCIpO1xuICAgIH1cbn07XG5cbi8vIGNvbnN0IGRlY3JwdGVkVm90ZUJveCA9IGFzeW5jICh2b3RlQm94RGF0YTogU3VpRW5jcnlwdGVkVm90ZVR5cGVbXSkgPT4ge1xuLy8gICAgIGNvbnN0IHZhbGlkVm90ZXMgPSB2b3RlQm94RGF0YS5maWx0ZXIoKHZvdGUpID0+IHtcbi8vICAgICAgICAgdm90ZS52b3RlciBpcyBVaW50MTZBcnJheVxuLy8gICAgIH1cbi8vIH1cblxuZXhwb3J0IGNvbnN0IHRlc3RfZGVjcnB0ZWRWb3RlQm94ID0gYXN5bmMgKHNlc3Npb25LZXk6IFNlc3Npb25LZXksIHZvdGVCb3hEYXRhOiBTdWlFbmNyeXB0ZWRWb3RlVHlwZVtdLCBtb3ZlQ2FsbENvbnN0cnVjdG9yOiBNb3ZlQ2FsbENvbnN0cnVjdG9yKSA9PiB7XG4gICAgY29uc29sZS5sb2coXCLlvIDlp4vop6Plr4bmipXnpajmlbDmja7vvIzmlbDph486XCIsIHZvdGVCb3hEYXRhLmxlbmd0aCk7XG4gICAgY29uc29sZS5sb2coXCLkvb/nlKjnmoRzZXNzaW9uS2V55Zyw5Z2AOlwiLCBzZXNzaW9uS2V5LmdldEFkZHJlc3MoKSk7XG5cbiAgICAvLyDpobrluo/lpITnkIbogIzkuI3mmK/lubbooYzlpITnkIbvvIzku6Xpgb/lhY3lj6/og73nmoTnq57kuonmnaHku7ZcbiAgICBjb25zdCB2b3RlUmVzdWx0OiBzdHJpbmdbXSA9IFtdO1xuXG4gICAgZm9yIChjb25zdCB2b3RlIG9mIHZvdGVCb3hEYXRhKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyDkuLrmr4/kuKrmipXnpajliJvlu7rmlrDnmoTkuovliqHlr7nosaFcbiAgICAgICAgICAgIGNvbnN0IHR4ID0gbmV3IFRyYW5zYWN0aW9uKCk7XG4gICAgICAgICAgICB0eC5zZXRTZW5kZXIoc2Vzc2lvbktleS5nZXRBZGRyZXNzKCkpO1xuXG4gICAgICAgICAgICAvLyDop6PmnpDliqDlr4blr7nosaFJRFxuICAgICAgICAgICAgY29uc3QgZnVsbElkID0gRW5jcnlwdGVkT2JqZWN0LnBhcnNlKG5ldyBVaW50OEFycmF5KHZvdGUudm90ZSkpLmlkO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCLmraPlnKjlpITnkIbliqDlr4bmipXnpahJRDpcIiwgZnVsbElkKTtcbiAgICAgICAgICAgIG1vdmVDYWxsQ29uc3RydWN0b3IodHgsIGZ1bGxJZCk7XG5cbiAgICAgICAgICAgIGNvbnN0IHR4Qnl0ZXMgPSBhd2FpdCB0eC5idWlsZCh7IGNsaWVudDogc3VpQ2xpZW50LCBvbmx5VHJhbnNhY3Rpb25LaW5kOiB0cnVlIH0pO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCLkuqTmmJPmnoTlu7rlrozmiJDvvIzlvIDlp4vop6Plr4YuLi5cIik7XG5cbiAgICAgICAgICAgIC8vIOino+WvhuaKleelqFxuICAgICAgICAgICAgY29uc3QgZGVjcnlwdGVkVm90ZSA9IGF3YWl0IHNlYWxDbGllbnQuZGVjcnlwdCh7XG4gICAgICAgICAgICAgICAgZGF0YTogbmV3IFVpbnQ4QXJyYXkodm90ZS52b3RlKSxcbiAgICAgICAgICAgICAgICBzZXNzaW9uS2V5LFxuICAgICAgICAgICAgICAgIHR4Qnl0ZXMsXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgY29uc3QgZGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigpO1xuICAgICAgICAgICAgY29uc3Qgdm90ZU51bWJlciA9IGRlY29kZXIuZGVjb2RlKGRlY3J5cHRlZFZvdGUpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCLop6Plr4bmiJDlip/vvIzmipXnpajntKLlvJU6XCIsIHZvdGVOdW1iZXIpO1xuXG4gICAgICAgICAgICB2b3RlUmVzdWx0LnB1c2godm90ZU51bWJlcik7XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIuino+WvhuWNleS4quaKleelqOaXtuWHuumUmTpcIiwgZXJyKTtcblxuICAgICAgICAgICAgLy8g6K+m57uG6K6w5b2V6ZSZ6K+v57G75Z6LXG4gICAgICAgICAgICBpZiAoZXJyIGluc3RhbmNlb2YgTm9BY2Nlc3NFcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ+aXoOadg+iuv+mXruino+WvhuWvhumSpTonLCBlcnIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCfop6Plr4blpLHotKXvvIzor6bnu4bplJnor686JywgZXJyKTtcblxuICAgICAgICAgICAgICAgIC8vIOWmguaenOWPr+iDve+8jOiusOW9lXNlc3Npb25LZXnnmoTnirbmgIFcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuW9k+WJjXNlc3Npb25LZXnnirbmgIE6XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZHJlc3M6IHNlc3Npb25LZXkuZ2V0QWRkcmVzcygpLFxuICAgICAgICAgICAgICAgICAgICAgICAgaGFzU2lnbmF0dXJlOiBCb29sZWFuKHNlc3Npb25LZXkuZ2V0UGVyc29uYWxNZXNzYWdlPy4oKSksXG4gICAgICAgICAgICAgICAgICAgICAgICBleHBpcmVkOiBzZXNzaW9uS2V5LmlzRXhwaXJlZD8uKCkgfHwgXCLmnKrnn6VcIlxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5peg5rOV5qOA5p+lc2Vzc2lvbktleeeKtuaAgVwiLCBlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc29sZS5sb2coYOino+WvhuWujOaIkDog5oiQ5YqfICR7dm90ZVJlc3VsdC5sZW5ndGh9LyR7dm90ZUJveERhdGEubGVuZ3RofWApO1xuICAgIHJldHVybiB2b3RlUmVzdWx0O1xufTtcblxuIl0sIm5hbWVzIjpbInRvSGV4IiwiZnJvbUhleCIsIm5ldHdvcmtDb25maWciLCJzZWFsQ2xpZW50Iiwic3VpQ2xpZW50IiwiVHJhbnNhY3Rpb24iLCJFbmNyeXB0ZWRPYmplY3QiLCJOb0FjY2Vzc0Vycm9yIiwiY29uc3RydWN0TW92ZUNhbGwiLCJwYWNrYWdlSWQiLCJhbGxvd2xpc3RJZCIsInR4IiwiaWQiLCJtb3ZlQ2FsbCIsInRhcmdldCIsImFyZ3VtZW50cyIsInB1cmUiLCJ2ZWN0b3IiLCJvYmplY3QiLCJzdHJpbmciLCJlbmNyeXB0Vm90ZVBvb2wiLCJ2b3RlUG9vbCIsImFsbG93bGlzdElEIiwibm9uY2UiLCJjcnlwdG8iLCJnZXRSYW5kb21WYWx1ZXMiLCJVaW50OEFycmF5IiwicG9saWN5T2JqZWN0Qnl0ZXMiLCJlbmNvZGVyIiwiVGV4dEVuY29kZXIiLCJzZXJpYWxpemVkRGF0YSIsImVuY29kZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJlbmNyeXB0ZWRPYmplY3QiLCJlbmNyeXB0ZWRCeXRlcyIsImVuY3J5cHQiLCJ0aHJlc2hvbGQiLCJ0ZXN0bmV0IiwidmFyaWFibGVzIiwicGFja2FnZUlEIiwiZGF0YSIsImVuY3J5cHRVc2VyVm90ZSIsIm9wdGlvbiIsInZvdGVib3hJRCIsImRlY3J5cHRWb3RlUG9vbCIsInNlc3Npb25LZXkiLCJlbmNyeXB0ZWREYXRhIiwibW92ZUNhbGxDb25zdHJ1Y3RvciIsImZ1bGxJZCIsInBhcnNlIiwidHhCeXRlcyIsImJ1aWxkIiwiY2xpZW50Iiwib25seVRyYW5zYWN0aW9uS2luZCIsImRlY3J5cHRlZERhdGEiLCJkZWNyeXB0IiwiY29uc29sZSIsImxvZyIsImRlY29kZVZvdGVQb29sIiwiZXJyIiwiZXJyb3JNc2ciLCJlcnJvciIsImRlY29kZXIiLCJUZXh0RGVjb2RlciIsImpzb25TdHJpbmciLCJkZWNvZGUiLCJ2b3RlUG9vbERhdGEiLCJFcnJvciIsInRlc3RfZGVjcnB0ZWRWb3RlQm94Iiwidm90ZUJveERhdGEiLCJsZW5ndGgiLCJnZXRBZGRyZXNzIiwidm90ZVJlc3VsdCIsInZvdGUiLCJzZXRTZW5kZXIiLCJkZWNyeXB0ZWRWb3RlIiwidm90ZU51bWJlciIsInB1c2giLCJhZGRyZXNzIiwiaGFzU2lnbmF0dXJlIiwiQm9vbGVhbiIsImdldFBlcnNvbmFsTWVzc2FnZSIsImV4cGlyZWQiLCJpc0V4cGlyZWQiLCJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./contracts/seal.ts\n"));

/***/ })

});