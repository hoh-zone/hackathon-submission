"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/votes/create/page",{

/***/ "(app-pages-browser)/./contracts/transaction.ts":
/*!**********************************!*\
  !*** ./contracts/transaction.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   allowListAdd: () => (/* binding */ allowListAdd),\n/* harmony export */   allowListMultiRemove: () => (/* binding */ allowListMultiRemove),\n/* harmony export */   allowListRemove: () => (/* binding */ allowListRemove),\n/* harmony export */   allowlistMultiAdd: () => (/* binding */ allowlistMultiAdd),\n/* harmony export */   castVoteTx: () => (/* binding */ castVoteTx),\n/* harmony export */   castVoteTx_woal: () => (/* binding */ castVoteTx_woal),\n/* harmony export */   createAllowlisTx: () => (/* binding */ createAllowlisTx),\n/* harmony export */   createVotePoolTx: () => (/* binding */ createVotePoolTx),\n/* harmony export */   createVotePoolTx_woal: () => (/* binding */ createVotePoolTx_woal)\n/* harmony export */ });\n/* harmony import */ var _mysten_sui_transactions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mysten/sui/transactions */ \"(app-pages-browser)/./node_modules/@mysten/sui/dist/esm/transactions/Transaction.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"(app-pages-browser)/./contracts/index.ts\");\n\n\nconst createVotePoolTx = (votepool)=>{\n    if (!(votepool.details instanceof Uint8Array) || !votepool.allowlist_Id) {\n        throw new Error(\"Invalid vote pool data\");\n    }\n    const tx = new _mysten_sui_transactions__WEBPACK_IMPORTED_MODULE_1__.Transaction();\n    tx.moveCall({\n        package: ___WEBPACK_IMPORTED_MODULE_0__.networkConfig.testnet.variables.packageID,\n        module: \"shadowvote\",\n        function: \"create_vote_pool_entry\",\n        arguments: [\n            tx.object(___WEBPACK_IMPORTED_MODULE_0__.networkConfig.testnet.variables.stateID),\n            tx.pure.vector('u8', votepool.details),\n            tx.object(votepool.allowlist_Id),\n            tx.pure.string(votepool.title),\n            tx.pure.u64(votepool.start),\n            tx.pure.u64(votepool.end)\n        ]\n    });\n    return tx;\n};\nconst createVotePoolTx_woal = (votepool)=>{\n    if (typeof votepool.details !== 'string') {\n        throw new Error(\"Invalid vote pool data\");\n    }\n    const tx = new _mysten_sui_transactions__WEBPACK_IMPORTED_MODULE_1__.Transaction();\n    tx.moveCall({\n        package: ___WEBPACK_IMPORTED_MODULE_0__.networkConfig.testnet.variables.packageID,\n        module: \"votepool_wo_al\",\n        function: \"create_vote_pool_entry\",\n        arguments: [\n            tx.object(___WEBPACK_IMPORTED_MODULE_0__.networkConfig.testnet.variables.stateID),\n            tx.pure.string(votepool.details),\n            tx.pure.string(votepool.title),\n            tx.pure.u64(votepool.start),\n            tx.pure.u64(votepool.end)\n        ]\n    });\n    return tx;\n};\nconst createAllowlisTx = async (name)=>{\n    const tx = new _mysten_sui_transactions__WEBPACK_IMPORTED_MODULE_1__.Transaction();\n    tx.moveCall({\n        package: ___WEBPACK_IMPORTED_MODULE_0__.networkConfig.testnet.variables.packageID,\n        module: \"allowlist\",\n        function: \"create_allowlist_entry\",\n        arguments: [\n            tx.pure.string(name)\n        ]\n    });\n    return tx;\n};\nconst allowListAdd = async (tx, allowlistId, allowlistCap, address)=>{\n    tx.moveCall({\n        target: \"\".concat(___WEBPACK_IMPORTED_MODULE_0__.networkConfig.testnet.variables.packageID, \"::allowlist::add\"),\n        arguments: [\n            tx.object(allowlistId),\n            tx.object(allowlistCap),\n            tx.pure.address(address)\n        ]\n    });\n    return tx;\n};\nconst allowListRemove = async (tx, allowlistId, allowlistCap, address)=>{\n    tx.moveCall({\n        target: \"\".concat(___WEBPACK_IMPORTED_MODULE_0__.networkConfig.testnet.variables.packageID, \"::allowlist::remove\"),\n        arguments: [\n            tx.object(allowlistId),\n            tx.object(allowlistCap),\n            tx.pure.address(address)\n        ]\n    });\n    return tx;\n};\nconst allowlistMultiAdd = async (tx, allowlistId, allowlistCap, addresses)=>{\n    tx.moveCall({\n        target: \"\".concat(___WEBPACK_IMPORTED_MODULE_0__.networkConfig.testnet.variables.packageID, \"::allowlist::batch_add\"),\n        arguments: [\n            tx.object(allowlistId),\n            tx.object(allowlistCap),\n            tx.pure.vector('address', addresses)\n        ]\n    });\n    return tx;\n};\nconst allowListMultiRemove = async (tx, allowlistId, allowlistCap, addresses)=>{\n    tx.moveCall({\n        target: \"\".concat(___WEBPACK_IMPORTED_MODULE_0__.networkConfig.testnet.variables.packageID, \"::allowlist::batch_remove\"),\n        arguments: [\n            tx.object(allowlistId),\n            tx.object(allowlistCap),\n            tx.pure.vector('address', addresses)\n        ]\n    });\n    return tx;\n};\nconst castVoteTx = async (votePoolId, votebox, vote)=>{\n    const tx = new _mysten_sui_transactions__WEBPACK_IMPORTED_MODULE_1__.Transaction();\n    tx.moveCall({\n        target: \"\".concat(___WEBPACK_IMPORTED_MODULE_0__.networkConfig.testnet.variables.packageID, \"::shadowvote::cast_vote\"),\n        arguments: [\n            tx.object(votePoolId),\n            tx.object(votebox),\n            tx.pure.vector('u8', vote),\n            tx.object(\"0x6\")\n        ]\n    });\n    return tx;\n};\nconst castVoteTx_woal = async (votePoolId, votebox, vote)=>{\n    const tx = new _mysten_sui_transactions__WEBPACK_IMPORTED_MODULE_1__.Transaction();\n    tx.moveCall({\n        target: \"\".concat(___WEBPACK_IMPORTED_MODULE_0__.networkConfig.testnet.variables.packageID, \"::votepool_wo_al::cast_vote\"),\n        arguments: [\n            tx.object(votePoolId),\n            tx.object(votebox),\n            tx.pure.vector('u8', vote),\n            tx.object(\"0x6\")\n        ]\n    });\n    return tx;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./contracts/transaction.ts\n"));

/***/ })

});